services:
  # [SB] 웹 애플리케이션만 Docker로 실행
  web-app:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/arm64  # [SB] M1 Mac 호환
    container_name: ollama-web-app
    ports:
      - "5001:5000"    # [SB] Flask 웹 애플리케이션
    volumes:
      # [SB] Mac의 crawlai_new 폴더를 컨테이너와 완전 공유 (개발용)
      - ./:/app:rw
      # [SB] 로그 디렉토리 공유 - Mac에서도 로그 확인 가능
      - ./logs:/app/logs:rw
      # [SB] 스크린샷 디렉토리 공유 - Mac에서도 이미지 확인 가능
      - ./screenshot:/app/screenshot:rw
    environment:
      - TZ=Asia/Seoul
      - PYTHONPATH=/app
      # [SB] 호스트의 Ollama에 연결 - Docker 내부에서 호스트 접근
      - OLLAMA_HOST=http://host.docker.internal:11434
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    extra_hosts:
      # [SB] Docker 컨테이너에서 호스트 시스템 접근 설정
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # [SB] 리소스 제한 - 웹앱만 실행하므로 가벼움
    deploy:
      resources:
        limits:
          memory: 2G      # [SB] Playwright 브라우저 실행을 위해 2G로 설정
          cpus: '2.0'     # [SB] 크롤링 작업을 위해 2.0으로 설정
        reservations:
          memory: 1G
          cpus: '1.0'

networks:
  default:
    name: ollama-app-network